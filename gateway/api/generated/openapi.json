{"openapi": "3.1.0", "info": {"title": "INSERT_TITLE_HERE", "version": "0.1.0"}, "paths": {"/webhook/example": {"post": {"summary": "Handle Example Webhook Sync", "description": "Handle a webhook sync.", "operationId": "handle_example_webhook_sync_webhook_example_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ExampleSyncUpdate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/users": {"get": {"tags": ["users"], "summary": "Get Users", "description": "Retrieve users.", "operationId": "get_users_users_get", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/GetUsersQuery"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/User"}, "type": "array", "title": "Response Get Users Users Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/me": {"get": {"tags": ["users"], "summary": "Get Current User", "operationId": "get_current_user_me_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/User"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/items": {"get": {"tags": ["items"], "summary": "Get Items", "description": "Retrieve items.", "operationId": "get_items_items_get", "parameters": [{"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Offset"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 50, "title": "Limit"}}, {"name": "user_id", "in": "query", "required": true, "schema": {"type": "string", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/Item"}, "title": "Response Get Items Items Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["items"], "summary": "Create Item", "description": "Create an item.", "operationId": "create_item_items_post", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateItemRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Item"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["items"], "summary": "Update Item", "description": "Create an item.", "operationId": "update_item_items_patch", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateItemRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Item"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/login/token": {"post": {"summary": "Handle User Login", "description": "OAuth2 compatible token login, get an access token for future requests", "operationId": "handle_user_login_login_token_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserLoginRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccessfulLoginResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/register": {"post": {"summary": "Handle Register User", "description": "Create new user.", "operationId": "handle_register_user_register_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateUserRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccessfulLoginResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"CreateItemRequest": {"properties": {"raw_label": {"type": "string", "title": "Raw Label", "description": "The original label"}}, "type": "object", "required": ["raw_label"], "title": "CreateItemRequest"}, "CreateUserRequest": {"properties": {}, "type": "object", "title": "CreateUserRequest"}, "ExampleSyncUpdate": {"properties": {"webhook_type": {"type": "string", "title": "Webhook Type", "description": "The type of webhook"}, "webhook_code": {"type": "string", "title": "Webhook Code", "description": "The code of the webhook"}}, "type": "object", "required": ["webhook_type", "webhook_code"], "title": "ExampleSyncUpdate"}, "GetUsersQuery": {"properties": {"offset": {"type": "integer", "title": "Offset", "description": "How many offset items from the beginning to skip", "default": 0}, "limit": {"type": "integer", "title": "Limit", "description": "The number of items to return with the response", "default": 50}, "user_id": {"type": "string", "title": "User ID", "description": "Filter by this user ID"}}, "type": "object", "required": ["user_id"], "title": "GetUsersQuery", "description": "Query for fetching users."}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "Item": {"properties": {"id": {"type": "string", "title": "Id", "description": "The ID of the entity"}, "user_id": {"type": "string", "title": "User Id", "description": "The user id who owns this entity"}, "label": {"type": "string", "title": "Label", "description": "The label of the item"}}, "type": "object", "required": ["id", "user_id", "label"], "title": "Item"}, "SuccessfulLoginResponse": {"properties": {"access_token": {"type": "string", "title": "Access Token"}, "token_type": {"type": "string", "title": "Token Type"}, "user": {"allOf": [{"$ref": "#/components/schemas/User"}], "description": "The user who has just logged in"}}, "type": "object", "required": ["access_token", "token_type", "user"], "title": "SuccessfulLoginResponse"}, "UpdateItemRequest": {"properties": {"id": {"type": "string", "title": "Id", "description": "The ID of the entity to update"}}, "type": "object", "required": ["id"], "title": "UpdateItemRequest"}, "User": {"properties": {"id": {"type": "string", "title": "Id", "description": "The ID of the entity"}, "user_id": {"type": "string", "title": "User Id", "description": "The user id who owns this entity"}, "email": {"type": "string", "title": "Email", "description": "The email of the user"}, "transaction_refresh_interval_minutes": {"type": "integer", "title": "Transaction Refresh Interval Minutes", "description": "The refresh rate of transactions"}, "account_refresh_interval_minutes": {"type": "integer", "title": "Account Refresh Interval Minutes", "description": "The refresh rate of accounts"}}, "type": "object", "required": ["id", "user_id", "email", "transaction_refresh_interval_minutes", "account_refresh_interval_minutes"], "title": "User", "description": "A user in the system."}, "UserLoginRequest": {"properties": {"user_email": {"type": "string", "title": "User Email", "description": "The email for login"}, "password": {"type": "string", "title": "Password", "description": "The password for the user"}}, "type": "object", "required": ["user_email", "password"], "title": "UserLoginRequest"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}, "securitySchemes": {"OAuth2PasswordBearer": {"type": "oauth2", "flows": {"password": {"scopes": {}, "tokenUrl": "/login/token"}}}}}}