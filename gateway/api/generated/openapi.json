{"openapi": "3.1.0", "info": {"title": "INSERT_TITLE_HERE", "version": "0.1.0"}, "paths": {"/webhook/example": {"post": {"summary": "Handle Example Webhook Sync", "description": "Handle a webhook sync.", "operationId": "handle_example_webhook_sync_webhook_example_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ExampleSyncUpdate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/users": {"get": {"tags": ["users"], "summary": "Get Users", "description": "Retrieve users.", "operationId": "get_users_users_get", "parameters": [{"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Offset"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 50, "title": "Limit"}}, {"name": "direction", "in": "query", "required": false, "schema": {"enum": ["asc", "desc"], "type": "string", "default": "desc", "title": "Direction"}}, {"name": "order_by", "in": "query", "required": false, "schema": {"type": "string", "default": "created_at", "title": "Order By"}}, {"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "User Id"}}, {"name": "entity_state", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/EntityState"}, {"type": "null"}], "title": "Entity State"}}, {"name": "display_name", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Display Name"}}, {"name": "user_email", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "User Email"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GetEntitiesResponse_OutputUser_"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["users"], "summary": "Update User", "description": "Update a user.", "operationId": "update_user_users_patch", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdateRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OutputUser"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["users"], "summary": "Delete User", "description": "Delete a user.", "operationId": "delete_user_users_delete", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserDeleteRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OutputUser"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/me": {"get": {"tags": ["users"], "summary": "Get Current User", "operationId": "get_current_user_me_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OutputUser"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/items": {"get": {"tags": ["items", "items"], "summary": "Get Items", "description": "Retrieve items.", "operationId": "get_items_items_get", "parameters": [{"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Offset"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 50, "title": "Limit"}}, {"name": "direction", "in": "query", "required": false, "schema": {"enum": ["asc", "desc"], "type": "string", "default": "desc", "title": "Direction"}}, {"name": "order_by", "in": "query", "required": false, "schema": {"type": "string", "default": "created_at", "title": "Order By"}}, {"name": "user_id", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "User Id"}}, {"name": "entity_state", "in": "query", "required": false, "schema": {"anyOf": [{"$ref": "#/components/schemas/EntityState"}, {"type": "null"}], "title": "Entity State"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GetEntitiesResponse_OutputItem_"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["items", "items"], "summary": "Create Item", "description": "Create an item.", "operationId": "create_item_items_post", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemCreateRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OutputItem"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["items", "items"], "summary": "Update Item", "description": "Create an item.", "operationId": "update_item_items_patch", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemUpdateRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OutputItem"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["items", "items"], "summary": "Delete Item", "description": "Create an item.", "operationId": "delete_item_items_delete", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemDeleteRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/OutputItem"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/login/token": {"post": {"summary": "Handle User Login", "description": "OAuth2 compatible token login, get an access token for future requests", "operationId": "handle_user_login_login_token_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserLoginRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccessfulLoginResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/register": {"post": {"summary": "Handle Register User", "description": "Create new user.", "operationId": "handle_register_user_register_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCreateRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccessfulLoginResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"EntityState": {"type": "string", "enum": ["ACTIVE", "DELETED"], "title": "EntityState"}, "ExampleSyncUpdate": {"properties": {"webhook_type": {"type": "string", "title": "Webhook Type", "description": "The type of webhook"}, "webhook_code": {"type": "string", "title": "Webhook Code", "description": "The code of the webhook"}}, "type": "object", "required": ["webhook_type", "webhook_code"], "title": "ExampleSyncUpdate"}, "GetEntitiesResponse_OutputItem_": {"properties": {"items": {"items": {"$ref": "#/components/schemas/OutputItem"}, "type": "array", "title": "Items", "description": "The list of items requested."}}, "type": "object", "required": ["items"], "title": "GetEntitiesResponse[OutputItem]"}, "GetEntitiesResponse_OutputUser_": {"properties": {"items": {"items": {"$ref": "#/components/schemas/OutputUser"}, "type": "array", "title": "Items", "description": "The list of items requested."}}, "type": "object", "required": ["items"], "title": "GetEntitiesResponse[OutputUser]"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "ItemCreateRequest": {"properties": {"raw_label": {"type": "string", "title": "Raw Label", "description": "The original label"}}, "type": "object", "required": ["raw_label"], "title": "ItemCreateRequest"}, "ItemDeleteRequest": {"properties": {"id": {"type": "string", "title": "Id", "description": "The UUID of the entity being updated"}}, "type": "object", "required": ["id"], "title": "ItemDeleteRequest"}, "ItemUpdateRequest": {"properties": {"id": {"type": "string", "title": "Id", "description": "The UUID of the entity being updated"}, "label": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Label", "description": "The new label of the item"}}, "type": "object", "required": ["id", "label"], "title": "ItemUpdateRequest"}, "OutputItem": {"properties": {"id": {"type": "string", "title": "Id", "description": "The UUID of the entity"}, "user_id": {"type": "string", "title": "User Id", "description": "The user who created this entity"}, "entity_state": {"allOf": [{"$ref": "#/components/schemas/EntityState"}], "description": "The state of the entity"}, "label": {"type": "string", "title": "Label", "description": "The label of the item"}, "raw_label": {"type": "string", "title": "Raw Label", "description": "The original label"}}, "type": "object", "required": ["id", "user_id", "entity_state", "label", "raw_label"], "title": "OutputItem"}, "OutputUser": {"properties": {"id": {"type": "string", "title": "Id", "description": "The UUID of the entity"}, "user_id": {"type": "string", "title": "User Id", "description": "The user who created this entity"}, "entity_state": {"allOf": [{"$ref": "#/components/schemas/EntityState"}], "description": "The state of the entity"}, "display_name": {"type": "string", "title": "Display Name", "description": "The display name of the user"}, "user_email": {"type": "string", "title": "User Email", "description": "The email of the user"}, "hashed_password": {"type": "string", "title": "Hashed Password", "description": "The stored and hashed password of the user"}}, "type": "object", "required": ["id", "user_id", "entity_state", "display_name", "user_email", "hashed_password"], "title": "OutputUser"}, "SuccessfulLoginResponse": {"properties": {"access_token": {"type": "string", "title": "Access Token"}, "token_type": {"type": "string", "title": "Token Type"}, "user": {"allOf": [{"$ref": "#/components/schemas/OutputUser"}], "description": "The user who has just logged in"}}, "type": "object", "required": ["access_token", "token_type", "user"], "title": "SuccessfulLoginResponse"}, "UserCreateRequest": {"properties": {"display_name": {"type": "string", "title": "Display Name", "description": "The display name of the user"}, "user_email": {"type": "string", "title": "User Email", "description": "The email of the user"}, "password": {"type": "string", "title": "Password", "description": "The password (to be hashed and stored)"}}, "type": "object", "required": ["display_name", "user_email", "password"], "title": "UserCreateRequest"}, "UserDeleteRequest": {"properties": {"id": {"type": "string", "title": "Id", "description": "The UUID of the entity being updated"}}, "type": "object", "required": ["id"], "title": "UserDeleteRequest"}, "UserLoginRequest": {"properties": {"user_email": {"type": "string", "title": "User Email", "description": "The email for login"}, "password": {"type": "string", "title": "Password", "description": "The password for the user"}}, "type": "object", "required": ["user_email", "password"], "title": "UserLoginRequest"}, "UserUpdateRequest": {"properties": {"id": {"type": "string", "title": "Id", "description": "The UUID of the entity being updated"}, "display_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Display Name", "description": "The display name of the user"}, "password": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Password", "description": "The new password of the user"}}, "type": "object", "required": ["id"], "title": "UserUpdateRequest"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}, "securitySchemes": {"OAuth2PasswordBearer": {"type": "oauth2", "flows": {"password": {"scopes": {}, "tokenUrl": "/login/token"}}}}}}